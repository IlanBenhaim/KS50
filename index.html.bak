<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Anniversaire 50 ans - Kamal & Sabry</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Montserrat', sans-serif;
        }
        
        body {
            background-color: #ffffff;
            color: #333;
            line-height: 1.6;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            padding-bottom: 30px;
            border-bottom: 2px solid #f0f0f0;
        }

        .photo-container {
            margin-bottom: 25px;
        }

        .photo-container img {
            width: 200px;
            height: 200px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #f0f0f0;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .header h1 {
            font-size: 2.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 10px;
        }

        .header .subtitle {
            font-size: 1.1rem;
            color: #7f8c8d;
            font-weight: 400;
        }

        .event-info {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            text-align: center;
        }

        .event-info p {
            margin: 5px 0;
            font-weight: 500;
            color: #495057;
        }

        .cagnotte-counter {
            background: linear-gradient(135deg, #27ae60, #2ecc71);
            color: white;
            padding: 25px;
            border-radius: 12px;
            margin: 25px 0;
            text-align: center;
            box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
        }

        .cagnotte-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 15px;
        }

        .cagnotte-stats {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }

        .stat-box {
            background: rgba(255, 255, 255, 0.15);
            padding: 15px;
            border-radius: 8px;
            backdrop-filter: blur(10px);
        }

        .stat-value {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .progress-bar {
            background: rgba(255, 255, 255, 0.2);
            height: 8px;
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 10px;
        }

        .progress-fill {
            background: white;
            height: 100%;
            border-radius: 4px;
            transition: width 0.5s ease;
            width: 0%;
        }

        .objective-text {
            font-size: 0.95rem;
            opacity: 0.9;
        }

        .form-container {
            margin-top: 40px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #2c3e50;
        }
        
        .required {
            color: #e74c3c;
        }
        
        input[type="text"],
        input[type="email"],
        input[type="tel"],
        input[type="number"] {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        input[type="text"]:focus,
        input[type="email"]:focus,
        input[type="tel"]:focus,
        input[type="number"]:focus {
            border-color: #3498db;
            outline: none;
        }
        
        .currency-group {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-top: 10px;
        }
        
        .currency-option {
            border: 2px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            cursor: pointer;
            transition: all 0.3s;
            position: relative;
        }
        
        .currency-option:hover {
            border-color: #3498db;
        }
        
        .currency-option.selected {
            border-color: #27ae60;
            background-color: #f1f9f5;
        }
        
        .currency-option input[type="radio"] {
            position: absolute;
            opacity: 0;
        }
        
        .currency-label {
            font-weight: 600;
            font-size: 1.1rem;
            margin-bottom: 5px;
        }
        
        .currency-desc {
            font-size: 0.9rem;
            color: #7f8c8d;
        }
        
        .rib-container {
            margin-top: 25px;
        }
        
        .rib-info {
            display: none;
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-top: 15px;
            border-left: 4px solid #27ae60;
        }
        
        .rib-info.show {
            display: block;
        }
        
        .rib-info h3 {
            margin-bottom: 15px;
            color: #2c3e50;
        }
        
        .rib-details p {
            margin-bottom: 8px;
            font-size: 0.95rem;
        }
        
        .submit-btn {
            background: #2c3e50;
            color: white;
            border: none;
            padding: 14px 24px;
            border-radius: 6px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            width: 100%;
            margin-top: 20px;
            transition: background 0.3s;
        }
        
        .submit-btn:hover {
            background: #1a252f;
        }
        
        .submit-btn:disabled {
            background: #95a5a6;
            cursor: not-allowed;
        }
        
        .message {
            display: none;
            padding: 15px;
            border-radius: 6px;
            margin-top: 20px;
            text-align: center;
        }
        
        .success-message {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .error-message {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .phone-group {
            display: flex;
            gap: 10px;
        }

        .phone-prefix {
            flex: 0 0 120px;
        }

        .phone-number {
            flex: 1;
        }

        .confirmation-page {
            display: none;
            text-align: center;
            padding: 40px 20px;
        }

        .confirmation-page.show {
            display: block;
        }

        .confirmation-page h2 {
            color: #27ae60;
            font-size: 2rem;
            margin-bottom: 20px;
        }

        .confirmation-details {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 8px;
            margin: 25px 0;
            text-align: left;
        }

        .confirmation-details h3 {
            color: #2c3e50;
            margin-bottom: 15px;
            text-align: center;
        }

        .back-btn {
            background: #6c757d;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 6px;
            font-family: 'Montserrat', sans-serif;
            font-weight: 500;
            cursor: pointer;
            margin-top: 20px;
        }

        .back-btn:hover {
            background: #5a6268;
        }

        /* Style pour le panneau d'administration */
        .admin-panel {
            display: none;
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-top: 30px;
            border: 1px solid #ddd;
        }

        .admin-panel h3 {
            color: #2c3e50;
            margin-bottom: 15px;
            font-size: 1.2rem;
        }

        .admin-btn {
            background: #dc3545;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
        }

        .admin-btn:hover {
            background: #c82333;
        }

        .admin-info {
            margin: 15px 0;
            font-size: 0.9rem;
        }

        .admin-info p {
            margin: 5px 0;
        }

        footer {
            text-align: center;
            margin-top: 50px;
            padding-top: 20px;
            border-top: 1px solid #f0f0f0;
            color: #7f8c8d;
            font-size: 0.9rem;
        }

        @media (max-width: 768px) {
            .container {
                padding: 20px 15px;
            }
            
            .header h1 {
                font-size: 1.8rem;
            }
            
            .currency-group {
                grid-template-columns: 1fr;
            }

            .phone-group {
                flex-direction: column;
            }

            .phone-prefix {
                flex: none;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="photo-container">
                <img src="kamal-sabry.jpg" alt="Kamal & Sabry">
            </div>
            <h1>Anniversaire 50 ans</h1>
            <p class="subtitle">Kamal & Sabry</p>
            <div class="event-info">
                <p><strong>19-20 Septembre 2025</strong></p>
                <p><strong>Bin El Ouidane</strong></p>
            </div>

            <!-- Introduction -->
            <div class="introduction" style="margin-top: 25px; background: #f8f9fa; padding: 20px; border-radius: 8px; text-align: left; line-height: 1.6;">
                <p>Comme vous le savez, Kamal et Sabry fêtent leurs 50 ans ensemble les 19 et 20 septembre prochains, à Bin el Ouidane, un lieu magnifique dans le Haut Atlas au bord du lac, où nous aurons tous le plaisir de nous retrouver.</p>
                
                <p>À cette occasion, et pour marquer dignement cette double célébration, nous avons pris l'initiative de créer une cagnotte commune. L'idée est simple : plutôt que de multiplier les démarches individuelles, chacun pourra contribuer à un cadeau pour chacun d'eux, conçu dans le même esprit mais avec une touche personnelle.</p>
                
                <p>Notre objectif est de réunir au moins <strong>70 000 dirhams</strong> (soit environ <strong>7 000 euros</strong>), afin de leur offrir deux cadeaux à la hauteur de l'événement.</p>
                
                <p>Nous avons donc préparé ce formulaire qui permet de déclarer votre participation, de visualiser les montants déjà collectés et d'accéder aux coordonnées bancaires (RIB en dirhams ou en euros) pour effectuer directement votre virement.</p>
                
                <p>Nous nous chargerons ensuite de centraliser les contributions et de faire figurer l'ensemble des participants dans le message de remerciement.</p>
                
                <p>Merci à chacun de jouer le jeu pour que Kamal et Sabry puissent garder un souvenir exceptionnel de ce moment unique.</p>
            </div>

            <!-- Compteur de cagnotte -->
            <div class="cagnotte-counter">
                <div class="cagnotte-title">🎯 Objectif Cagnotte</div>
                
                <div class="cagnotte-stats">
                    <div class="stat-box">
                        <div class="stat-value" id="totalAmount">0 €</div>
                        <div class="stat-label">Montant récolté</div>
                    </div>
                    <div class="stat-box">
                        <div class="stat-value" id="contributorCount">0</div>
                        <div class="stat-label">Contributeurs</div>
                    </div>
                </div>

                <div class="progress-bar">
                    <div class="progress-fill" id="progressFill"></div>
                </div>
                
                <div class="objective-text">
                    Objectif : <strong>7 000 € / 70 000 MAD</strong>
                </div>
            </div>
        </div>

        <div class="form-container">
            <h2 style="margin-bottom: 30px; color: #2c3e50; font-weight: 600; text-align: center;">Contribution pour le cadeau commun</h2>
            
            <form id="contributionForm">
                <div class="form-group">
                    <label for="prenom">Prénom <span class="required">*</span></label>
                    <input type="text" id="prenom" name="prenom" required>
                </div>

                <div class="form-group">
                    <label for="nom">Nom <span class="required">*</span></label>
                    <input type="text" id="nom" name="nom" required>
                </div>

                <div class="form-group">
                    <label for="email">Email <span class="required">*</span></label>
                    <input type="email" id="email" name="email" required>
                </div>

                <div class="form-group">
                    <label>Téléphone portable <span class="required">*</span></label>
                    <div class="phone-group">
                        <select id="phonePrefix" name="phonePrefix" class="phone-prefix" required>
                            <option value="+33">🇫🇷 +33</option>
                            <option value="+212">🇲🇦 +212</option>
                            <option value="+1">🇺🇸 +1</option>
                            <option value="+44">🇬🇧 +44</option>
                            <option value="+49">🇩🇪 +49</option>
                            <option value="+39">🇮🇹 +39</option>
                            <option value="+34">🇪🇸 +34</option>
                            <option value="+32">🇧🇪 +32</option>
                            <option value="+41">🇨🇭 +41</option>
                            <option value="+31">🇳🇱 +31</option>
                        </select>
                        <input type="tel" id="telephone" name="telephone" class="phone-number" placeholder="123456789" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="montant">Montant de contribution <span class="required">*</span></label>
                    <input type="number" id="montant" name="montant" min="1" step="1" required>
                </div>

                <div class="form-group">
                    <label>Devise <span class="required">*</span></label>
                    <div class="currency-group">
                        <div class="currency-option" data-currency="euro">
                            <input type="radio" id="euro" name="devise" value="euro" required>
                            <div class="currency-label">Euro (€)</div>
                            <div class="currency-desc">Paiement en France</div>
                        </div>
                        
                        <div class="currency-option" data-currency="dirham">
                            <input type="radio" id="dirham" name="devise" value="dirham" required>
                            <div class="currency-label">Dirham (MAD)</div>
                            <div class="currency-desc">Paiement au Maroc</div>
                        </div>
                    </div>
                </div>

                <div class="rib-container">
                    <div class="rib-info" id="rib-euro">
                        <h3>💶 Paiement en France</h3>
                        <div class="rib-details">
                            <p><strong>Bénéficiaire :</strong> M. ILAN BEN HAIM</p>
                            <p><strong>IBAN :</strong> FR76 3000 3031 1100 0500 2894 445</p>
                            <p><strong>BIC :</strong> SOGEFRPP</p>
                            <p><strong>Banque :</strong> Société Générale</p>
                            <p><strong>Domiciliation :</strong> PARIS IDFN PRIV BK G (03038)</p>
                            <p><strong>Motif :</strong> Cadeau Kamal & Sabry</p>
                        </div>
                    </div>
                    
                    <div class="rib-info" id="rib-dirham">
                        <h3>🇲🇦 Paiement au Maroc</h3>
                        <div class="rib-details">
                            <p><strong>Bénéficiaire :</strong> BENHAIM ILAN ICHOA</p>
                            <p><strong>RIB :</strong> 007 780 0002438000489014 81</p>
                            <p><strong>IBAN :</strong> MA64 007 780 0002438000489014 81</p>
                            <p><strong>BIC :</strong> BCMAMAMC</p>
                            <p><strong>Banque :</strong> AttijariWafa bank</p>
                            <p><strong>Agence :</strong> Casa Av. du Phare (0243)</p>
                            <p><strong>Motif :</strong> Cadeau Kamal & Sabry</p>
                        </div>
                    </div>
                </div>

                <button type="submit" class="submit-btn" id="submitBtn">
                    Confirmer ma contribution
                </button>

                <div id="successMessage" class="message success-message">
                    <h3 style="margin-bottom: 10px; color: #155724;">🎉 Merci pour votre contribution !</h3>
                    <p>Votre participation pour l'anniversaire de Kamal & Sabry a été enregistrée avec succès.</p>
                    <p><strong>Vous allez recevoir un email de confirmation</strong> avec les détails de paiement.</p>
                    <p style="margin-top: 15px; font-size: 0.9rem; opacity: 0.8;">
                        📅 Rendez-vous les 19-20 septembre à Bin El Ouidane !
                    </p>
                </div>

                <div id="errorMessage" class="message error-message">
                    ❌ Une erreur s'est produite. Veuillez réessayer.
                </div>
            </form>
        </div>

        <!-- Page de confirmation -->
        <div id="confirmationPage" class="confirmation-page">
            <h2>🎉 Contribution confirmée !</h2>
            <p style="font-size: 1.1rem; margin-bottom: 20px;">
                Merci <strong id="confirmName"></strong> pour votre contribution de <strong id="confirmAmount"></strong> !
            </p>
            
            <div class="confirmation-details">
                <h3>📧 Email de confirmation envoyé</h3>
                <p>Vous allez recevoir un email à <strong id="confirmEmail"></strong> avec :</p>
                <ul style="margin: 15px 0; padding-left: 20px;">
                    <li>Confirmation de votre contribution</li>
                    <li>Informations bancaires pour le paiement</li>
                    <li>Détails de l'événement</li>
                </ul>
            </div>

            <div id="confirmRib" class="confirmation-details">
                <!-- RIB sera inséré ici par JavaScript -->
            </div>

            <p style="margin-top: 25px; color: #7f8c8d;">
                📅 Rendez-vous les 19-20 septembre à Bin El Ouidane !
            </p>

            <button class="back-btn" onclick="resetForm()">
                Nouvelle contribution
            </button>
        </div>
        
        <!-- Panneau d'administration (caché par défaut) -->
        <div id="adminPanel" class="admin-panel">
            <h3>🔧 Panneau d'administration</h3>
            
            <div class="admin-info">
                <p><strong>État actuel du compteur :</strong></p>
                <p>Mode API centralisée : <span id="apiStatus"></span></p>
                <p>URL API : <span id="apiUrl"></span></p>
                <p>Contributions locales : <span id="localContribCount">0</span></p>
            </div>
            
            <button class="admin-btn" onclick="resetLocalCounter()">
                Réinitialiser le compteur local
            </button>
            <p style="font-size: 12px; margin-top: 5px; color: #6c757d;">
                Cette action effacera toutes les contributions stockées localement dans ce navigateur.
            </p>
        </div>
    </div>

    <footer>
        <p>Made with ❤️ for Kamal & Sabry</p>
        <!-- Bouton caché pour accéder au panneau d'administration -->
        <p><a href="#" onclick="showAdminPanel(); return false;" style="color: #f8f9fa; font-size: 8px;">.</a></p>
    </footer>

    <script>
        // Configuration
        const ZAPIER_WEBHOOK_URL = 'https://hooks.zapier.com/hooks/catch/11483490/ut97dng/';
        const OBJECTIVE_EUR = 7000;
        const OBJECTIVE_MAD = 70000;
        const EXCHANGE_RATE = 10; // 1 EUR = 10 MAD (approximatif)
        
        // URL de l'API pour le compteur centralisé (à remplacer par votre URL de déploiement Google Apps Script)
        const COUNTER_API_URL = 'https://script.google.com/macros/s/AKfycbwSiezxBcc3_8KvAp8Osj2eyfVcYJWvkl0qYwsjyiJnbRzbSRaLOX4RGP_nX4oAsxJxPQ/exec';
        const USE_CENTRALIZED_COUNTER = true; // Mettre à true une fois l'API configurée

        // Gestion de la cagnotte
        function loadCagnotteData() {
            if (USE_CENTRALIZED_COUNTER) {
                // Utiliser l'API centralisée
                fetchCentralizedData();
            } else {
                // Utiliser le stockage local (mode démo ou fallback)
                loadLocalCagnotteData();
            }
            
            // Mettre à jour les informations du panneau d'administration
            updateAdminPanel();
        }
        
        // Fonction pour charger les données depuis l'API centralisée
        async function fetchCentralizedData() {
            try {
                const response = await fetch(COUNTER_API_URL);
                if (!response.ok) {
                    throw new Error('Erreur réseau');
                }
                
                const data = await response.json();
                if (data.error) {
                    throw new Error(data.message || 'Erreur API');
                }
                
                // Mettre à jour l'affichage avec les données centralisées
                updateCagnotteDisplay(data.totalEUR, data.contributorCount);
                
                console.log('Données centralisées chargées:', data);
            } catch (error) {
                console.error('Erreur lors du chargement des données centralisées:', error);
                // Fallback sur les données locales en cas d'erreur
                loadLocalCagnotteData();
            }
        }
        
        // Fonction pour charger les données depuis le stockage local
        function loadLocalCagnotteData() {
            const contributions = JSON.parse(localStorage.getItem('contributions') || '[]');
            let totalEur = 0;
            let totalMad = 0;
            let contributorCount = contributions.length;

            contributions.forEach(contrib => {
                const amount = parseFloat(contrib.montant) || 0;
                if (contrib.devise === 'euro') {
                    totalEur += amount;
                } else if (contrib.devise === 'dirham') {
                    totalMad += amount;
                }
            });

            // Convertir tout en euros pour l'affichage principal
            const totalEurEquivalent = totalEur + (totalMad / EXCHANGE_RATE);
            
            updateCagnotteDisplay(totalEurEquivalent, contributorCount);
        }

        function updateCagnotteDisplay(totalEur, count) {
            // Mettre à jour l'affichage
            document.getElementById('totalAmount').textContent = `${Math.round(totalEur)} €`;
            document.getElementById('contributorCount').textContent = count;
            
            // Calculer et afficher le pourcentage
            const percentage = Math.min((totalEur / OBJECTIVE_EUR) * 100, 100);
            document.getElementById('progressFill').style.width = `${percentage}%`;
        }

        function addContribution(data) {
            // Ajouter la contribution au localStorage
            const contributions = JSON.parse(localStorage.getItem('contributions') || '[]');
            contributions.push(data);
            localStorage.setItem('contributions', JSON.stringify(contributions));
            
            // Mettre à jour l'affichage
            loadCagnotteData();
        }

        // Fonction pour réinitialiser le compteur local
        function resetLocalCounter() {
            if (confirm('Êtes-vous sûr de vouloir réinitialiser le compteur local ? Cette action ne peut pas être annulée.')) {
                localStorage.removeItem('contributions');
                alert('Compteur local réinitialisé avec succès. La page va être rechargée.');
                window.location.reload();
            }
        }
        
        // Fonction pour afficher le panneau d'administration
        function showAdminPanel() {
            const adminPanel = document.getElementById('adminPanel');
            if (adminPanel) {
                adminPanel.style.display = adminPanel.style.display === 'none' ? 'block' : 'none';
                updateAdminPanel();
            }
        }
        
        // Fonction pour mettre à jour les informations du panneau d'administration
        function updateAdminPanel() {
            const apiStatus = document.getElementById('apiStatus');
            const apiUrl = document.getElementById('apiUrl');
            const localContribCount = document.getElementById('localContribCount');
            
            if (apiStatus) apiStatus.textContent = USE_CENTRALIZED_COUNTER ? 'Activé' : 'Désactivé';
            if (apiUrl) apiUrl.textContent = COUNTER_API_URL;
            
            const contributions = JSON.parse(localStorage.getItem('contributions') || '[]');
            if (localContribCount) localContribCount.textContent = contributions.length;
        }
        
        // Charger les données au démarrage
        document.addEventListener('DOMContentLoaded', function() {
            loadCagnotteData();
            
            // Rafraîchir les données toutes les 5 minutes
            setInterval(loadCagnotteData, 300000);
        });

        // Gestion de la sélection de devise
        document.querySelectorAll('.currency-option').forEach(option => {
            option.addEventListener('click', function() {
                const currency = this.dataset.currency;
                const radio = this.querySelector('input[type="radio"]');
                
                // Désélectionner toutes les options
                document.querySelectorAll('.currency-option').forEach(opt => {
                    opt.classList.remove('selected');
                });
                
                // Sélectionner l'option cliquée
                this.classList.add('selected');
                radio.checked = true;
                
                // Afficher le RIB correspondant
                document.querySelectorAll('.rib-info').forEach(rib => {
                    rib.classList.remove('show');
                });
                
                document.getElementById(`rib-${currency}`).classList.add('show');
            });
        });

        // Fonction pour afficher la page de confirmation
        function showConfirmation(data) {
            // Masquer le formulaire
            document.querySelector('.header').style.display = 'none';
            document.querySelector('.form-container').style.display = 'none';
            
            // Afficher la page de confirmation
            document.getElementById('confirmationPage').classList.add('show');
            
            // Remplir les détails
            document.getElementById('confirmName').textContent = `${data.prenom} ${data.nom}`;
            document.getElementById('confirmAmount').textContent = `${data.montant} ${data.devise.toUpperCase()}`;
            document.getElementById('confirmEmail').textContent = data.email;
            
            // Afficher le RIB correspondant
            const ribContainer = document.getElementById('confirmRib');
            if (data.devise === 'euro') {
                ribContainer.innerHTML = `
                    <h3>💶 Informations de paiement - France</h3>
                    <div style="background: white; padding: 16px; border-radius: 4px; font-family: monospace; line-height: 1.8;">
                        <strong>Bénéficiaire :</strong> M. ILAN BEN HAIM<br>
                        <strong>IBAN :</strong> FR76 3000 3031 1100 0500 2894 445<br>
                        <strong>BIC :</strong> SOGEFRPP<br>
                        <strong>Banque :</strong> Société Générale<br>
                        <strong>Domiciliation :</strong> PARIS IDFN PRIV BK G (03038)<br>
                        <strong>Motif :</strong> Cadeau Kamal & Sabry
                    </div>
                `;
            } else {
                ribContainer.innerHTML = `
                    <h3>🇲🇦 Informations de paiement - Maroc</h3>
                    <div style="background: white; padding: 16px; border-radius: 4px; font-family: monospace; line-height: 1.8;">
                        <strong>Bénéficiaire :</strong> BENHAIM ILAN ICHOA<br>
                        <strong>RIB :</strong> 007 780 0002438000489014 81<br>
                        <strong>IBAN :</strong> MA64 007 780 0002438000489014 81<br>
                        <strong>BIC :</strong> BCMAMAMC<br>
                        <strong>Banque :</strong> AttijariWafa bank<br>
                        <strong>Agence :</strong> Casa Av. du Phare (0243)<br>
                        <strong>Motif :</strong> Cadeau Kamal & Sabry
                    </div>
                `;
            }
        }

        // Fonction pour réinitialiser le formulaire
        function resetForm() {
            document.querySelector('.header').style.display = 'block';
            document.querySelector('.form-container').style.display = 'block';
            document.getElementById('confirmationPage').classList.remove('show');
            document.getElementById('contributionForm').reset();
            document.querySelectorAll('.currency-option').forEach(opt => {
                opt.classList.remove('selected');
            });
            document.querySelectorAll('.rib-info').forEach(rib => {
                rib.classList.remove('show');
            });
        }

        // Gestion du formulaire
        document.getElementById('contributionForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const submitBtn = document.getElementById('submitBtn');
            const successMessage = document.getElementById('successMessage');
            const errorMessage = document.getElementById('errorMessage');
            
            // Désactiver le bouton et afficher le loading
            submitBtn.disabled = true;
            submitBtn.textContent = 'Envoi en cours...';
            
            // Masquer les messages précédents
            successMessage.style.display = 'none';
            errorMessage.style.display = 'none';
            
            // Récupérer les données du formulaire
            const formData = new FormData(this);
            const data = {
                prenom: formData.get('prenom'),
                nom: formData.get('nom'),
                email: formData.get('email'),
                phonePrefix: formData.get('phonePrefix'),
                telephone: formData.get('telephone'),
                telephoneComplet: formData.get('phonePrefix') + formData.get('telephone'),
                montant: formData.get('montant'),
                devise: formData.get('devise'),
                timestamp: new Date().toLocaleString('fr-FR')
            };
            
            try {
                // Vérifier si Zapier est configuré
                if (ZAPIER_WEBHOOK_URL === 'YOUR_ZAPIER_WEBHOOK_URL_HERE') {
                    // Mode démo - ajouter à la cagnotte et afficher directement la confirmation
                    console.log('Mode démo - Zapier non configuré');
                    addContribution(data);
                    showConfirmation(data);
                    return;
                }

                // Envoyer les données à Zapier
                console.log('Envoi des données à Zapier:', data);
                const response = await fetch(ZAPIER_WEBHOOK_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                    mode: 'no-cors' // Important pour les requêtes cross-origin
                });
                
                console.log('Réponse Zapier:', response);
                
                // Comme mode: 'no-cors' ne permet pas de vérifier le statut,
                // on considère que l'envoi a réussi
                addContribution(data);
                showConfirmation(data);
                
            } catch (error) {
                console.error('Erreur détaillée:', error);
                
                // Afficher une erreur détaillée
                let errorText = '❌ Erreur lors de l\'envoi : ';
                if (error.name === 'TypeError' && error.message.includes('fetch')) {
                    errorText += 'Problème de connexion réseau. Vérifiez votre connexion internet.';
                } else if (error.message.includes('404')) {
                    errorText += 'URL Zapier introuvable. Vérifiez la configuration.';
                } else if (error.message.includes('500')) {
                    errorText += 'Erreur serveur Zapier. Réessayez dans quelques minutes.';
                } else {
                    errorText += error.message || 'Erreur inconnue. Réessayez.';
                }
                
                errorMessage.innerHTML = errorText;
                errorMessage.style.display = 'block';
                
                // Sauvegarde locale en cas d'erreur
                addContribution(data);
                
                // Proposer d'afficher quand même la confirmation en mode démo
                setTimeout(() => {
                    if (confirm('Voulez-vous voir un aperçu de la confirmation ? (Les données sont sauvegardées localement)')) {
                        showConfirmation(data);
                    }
                }, 2000);
                
            } finally {
                // Réactiver le bouton
                submitBtn.disabled = false;
                submitBtn.textContent = 'Confirmer ma contribution';
            }
        });
    </script>
</body>
</html>
